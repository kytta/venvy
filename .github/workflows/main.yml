name: Test

on:
  push:
    branches:
      - main
    tags:
  pull_request:
    branches:
      - main

# Run only one workflow per commit / pull-request
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

# Enable colour output
env:
  FORCE_COLOR: 1 # Request colored output from CLI tools supporting it
  MYPY_FORCE_COLOR: 1 # MyPy's color enforcement
  PRE_COMMIT_COLOR: 1
  PY_COLORS: 1 # Recognized by the `py` package, dependency of `pytest`
  TOX_PARALLEL_NO_SPINNER: 1
  TOX_TESTENV_PASSENV: >-
    FORCE_COLOR
    MYPY_FORCE_COLOR
    NO_COLOR
    PY_COLORS
    PYTEST_THEME
    PYTEST_THEME_MODE
    PRE_COMMIT_COLOR

jobs:
  test:
    name: ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        runs-on:
          - "ubuntu"
          - "macos"
          - "windows"

    env:
      PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python ${{ matrix.python-version }}
        id: python-install
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: hynek/setup-cached-uv@v2
      - name: Test
        run: >
          uvx --with tox-uv tox run
          -f py${PYTHON//./}
      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}-${{ matrix.runs-on }}
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: ignore
